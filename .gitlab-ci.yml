# 1) Build every commit on every branch and add the COMMIT SHORT SHA as suffix
maven-build:
  stage: build
  script:
    - mvn clean install
  artifacts:
    paths:
      - target/*.jar
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}

# 2) Copies all builds into download.dmx.systems/ci/ directory
copy-to-ci:
  stage: deploy
  script:
    - CIDIR='/var/www/download.dmx.systems/ci'
    - ARTIFACT_NAME="$( basename $( ls target/*.jar | tail -n1) .jar )"
    - DESTDIR="${CIDIR}/${ARTIFACT_NAME}"
    - NUNC="$( date +%F )"
    - DESTJARFILE="${ARTIFACT_NAME}-${NUNC}-${CI_PIPELINE_ID}.jar"
    - if [ ! -d  ${DESTDIR} ]; then mkdir ${DESTDIR}; fi
    - cp target/${ARTIFACT_NAME}.jar ${DESTDIR}/${DESTJARFILE}
    - ln -sf  ${DESTDIR}/${DESTJARFILE} ${DESTDIR}/${ARTIFACT_NAME}-latest.jar
    # 2.1) Deploy artifact to dev instance automatically
    # - docker cp -L ${CIDIR}/${CI_PROJECT_NAME}/${CI_PROJECT_NAME}-latest.jar dmx-dev-container:/usr/share/dmx/bundle-deploy/
  dependencies:
    - maven-build

# 3) Copies tags only into download.dmx.systems/plugins/ directory
copy-to-plugins:
  stage: deploy
  artifacts:
    paths:
    - target/*.jar
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_TAG}"
  script:
    - CIDIR='/var/www/download.dmx.systems/plugins'
    - DESTDIR="${CIDIR}/${CI_PROJECT_NAME}"
    - JARFILE="$( basename $( ls target/*.jar )"
    - if [ ! -d  ${DESTDIR} ]; then mkdir ${DESTDIR}; fi
    - cp target/${JARFILE} ${DESTDIR}/${JARFILE}
  dependencies:
    - maven-build
  only:
    - tags
